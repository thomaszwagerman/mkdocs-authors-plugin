{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs Authors Plugin","text":"<p>A custom MkDocs plugin designed to dynamically generate an \"Authors\" page for your documentation site from a simple YAML file. This allows you to easily manage and display information about contributors without manually updating Markdown files.</p> <p>The YAML format is kept consistent with Material's \"Defining authors\", which enables blog post author attribution.</p> <p>If you wish to automatically generate authors based on a git repository, git-authors is a tidy plugin to do this.</p> <p>The <code>authors-plugin</code> is developed for instances where you want to manually define an authors list, for example for a wider project team, or non-code contributors.  </p>"},{"location":"#features","title":"Features","text":"<ul> <li> <p>Dynamic Page Generation: Automatically creates an <code>authors.md</code> page based on your <code>.authors.yml</code> file.</p> </li> <li> <p>Configurable Paths: Easily customize the input YAML file name and the output Markdown page name.</p> </li> <li> <p>Author Profiles: Supports fields for name, description, avatar, affiliation, email, and social media links.</p> </li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>You can install this plugin using <code>pip</code>:</p> <pre><code>pip install mkdocs-authors-plugin\n</code></pre> <p>If you are developing the plugin locally, navigate to the plugin's root directory (the one containing <code>pyproject.toml</code>) and install it in editable mode:</p> <pre><code>cd /path/to/your/mkdocs-authors-plugin/\npip install -e .\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#1-configure-mkdocsyml","title":"1. Configure <code>mkdocs.yml</code>","text":"<p>Add the <code>authors_plugin</code> to your <code>plugins</code> list in your <code>mkdocs.yml</code> file. You also need to include the <code>authors.md</code> page in your <code>nav</code> section.</p> <pre><code># mkdocs.yml\nsite_name: My Awesome Docs\n\nplugins:\n  - search\n  - authors_plugin:\n      # Optional: specify the authors file if it's not .authors.yml\n      # authors_file: my_custom_authors.yaml\n      # Optional: specify the output page name if it's not authors.md\n      # output_page: team.md\n\nnav:\n  - Home: index.md\n  - Authors: authors.md # This is the page that will be generated by the plugin\n  - About: about.md\n</code></pre>"},{"location":"#2-create-your-authorsyml-file","title":"2. Create your <code>.authors.yml</code> file","text":"<p>Create an <code>.authors.yml</code> file in the root directory of your MkDocs documentation project (the same directory as <code>mkdocs.yml</code>). This file will contain the data for your authors.</p> <p>The plugin expects a top-level <code>authors</code> key, under which each author is defined by a unique ID (e.g., <code>author_one</code>).</p> <p>You can also define optional page parameters under <code>page_params</code>, such as an overall title and  description.</p> <pre><code># .authors.yml\n\n# Optional: Define page-level parameters for the generated authors page\npage_params:\n  title: Our Project Team\n  description: \"Meet the team.\"\n  avatar_size: 150           \n  avatar_shape: circle      \n  avatar_align: left\n\n# Required: Define individual author data\nauthors:\n  author_one:\n    name: Author One\n    description: Owner\n    avatar: headshot_one.png\n    affiliation: British Antarctic Survey\n    email: author.one@example.com\n    github: authorone\n    linkedin: author-one-profile\n    twitter: author_one_dev\n  author_two:\n    name: Author Two\n    description: Maintainer\n    avatar: headshot_two.png\n    affiliation: UK Centre for Ecology &amp; Hydrology\n    # You can omit any fields not applicable to an author\n  author_three:\n    name: Author Three\n    description: Core Contributor\n    avatar: headshot_three.png\n    affiliation: University of Edinburgh\n</code></pre>"},{"location":"#3-run-mkdocs","title":"3. Run MkDocs","text":"<p>Navigate to your main MkDocs documentation project root (the directory containing <code>mkdocs.yml</code>) and run:</p> <pre><code>mkdocs serve\n</code></pre> <p>The plugin will generate the <code>authors.md</code> page, and you should see it in your site's navigation.</p>"},{"location":"#where-is-authorsmd","title":"Where is authors.md?","text":"<p>When mkdocs serve detects a file change in <code>docs/</code> , it triggers a rebuild. If <code>authors.md</code> was written into <code>docs/</code>, that write itself is a \"change,\" leading to an endless cycle of rebuilding.</p> <p>To prevent this endless loop, the plugin adds a <code>File</code> object representing <code>authors.md</code> to MkDocs' internal list of files. This tells MkDocs that there is a page called <code>authors.md</code> that should be part of the documentation build. This mean a physical file does not have to exist at <code>docs/authors.md</code>.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! If you find a bug or have a feature request, please open an issue or submit a pull request on the GitHub repository.</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License - see the <code>LICENSE</code> file for details.</p>"},{"location":"authors_yaml_format/","title":"Authors YAML File Format","text":"<p>The <code>mkdocs-authors-plugin</code> expects your author data to be defined in a YAML file (by default, <code>.authors.yml</code>) located in the root of your MkDocs documentation project.</p> <p>The YAML can contain two top-level keys named <code>page_params</code> (optional) and <code>authors</code>.</p>"},{"location":"authors_yaml_format/#page-data","title":"Page Data","text":"<p>The <code>page_params</code> key is an optional top-level dictionary that lets you configure characteristics of the generated authors page itself, such as its main title and an introductory description.</p> Field Type Description Default Example Value <code>title</code> <code>string</code> The main title of the generated authors page. <code>Our Amazing Authors</code> <code>Project Contributors</code> <code>description</code> <code>string</code> An introductory paragraph displayed directly under the main title. <code>None</code> <code>Meet our dedicated team members.</code> <code>avatar_size</code> <code>integer</code> Sets the uniform width and height for all author avatars in pixels. <code>100</code> <code>120</code> <code>avatar_shape</code> <code>string</code> Controls the shape of the avatars. Can be <code>square</code> or <code>circle</code>. <code>square</code> <code>circle</code> <code>avatar_align</code> <code>string</code> Controls the horizontal alignment of avatars. <code>left</code> and <code>right</code> will make text wrap around the avatar. <code>center</code> will place the avatar on its own line, horizontally centered. <code>center</code> <code>left</code>"},{"location":"authors_yaml_format/#author-data","title":"Author Data","text":"<p>The <code>authors</code> key is a required top-level dictionary which holds individual author entries.</p> <p>Each author entry is identified by a unique key (e.g., <code>author_one</code>, <code>author_two</code>), which the plugin uses as the author's ID.</p> <p>Under each author ID, you can define various fields to describe the author. The plugin will render these fields on the generated authors page.</p> Field Type Description Example Value <code>name</code> <code>string</code> Required. The full name of the author. <code>Author One</code> <code>description</code> <code>string</code> A brief description or role of the author. This will be displayed as a blockquote. <code>Lead Developer</code> <code>avatar</code> <code>string</code> A URL to the author's profile picture or avatar. <code>https://placehold.co/100x100/aabbcc?text=A1</code> <code>affiliation</code> <code>string</code> The organization or institution the author is affiliated with. <code>British Antarctic Survey</code> <code>email</code> <code>string</code> The author's email address. Will be rendered as a <code>mailto:</code> link. <code>author.one@example.com</code> <code>github</code> <code>string</code> The author's GitHub username. Will be rendered as a link to their GitHub profile. <code>authorone</code> <code>linkedin</code> <code>string</code> The author's LinkedIn profile ID (the part after <code>linkedin.com/in/</code>). Will be rendered as a link. <code>author-one-profile</code> <code>twitter</code> <code>string</code> The author's Twitter (X) handle. Will be rendered as a link to their Twitter profile. <code>author_one_dev</code>"},{"location":"authors_yaml_format/#example-authorsyml","title":"Example <code>.authors.yml</code>","text":"<pre><code># .authors.yml\n\n# Optional: Define page-level parameters for the generated authors page\npage_params:\n  title: Our Project Team\n  description: \"Meet the people behind our project.\"\n  avatar_size: 100\n  avatar_shape: circle\n  avatar_align: left \n\n# Required: Define individual author data\nauthors:\n  author_one:\n    name: Author One\n    description: Owner\n    avatar: headshot_one.png\n    affiliation: British Antarctic Survey\n    email: author.one@example.com\n    github: authorone\n    linkedin: author-one-profile\n    twitter: author_one_dev\n  author_two:\n    name: Author Two\n    description: Maintainer\n    avatar: headshot_two.png\n    affiliation: UK Centre for Ecology &amp; Hydrology\n    # You can omit any fields not applicable to an author\n  author_three:\n    name: Author Three\n    description: Core Contributor\n    avatar: headshot_three.png\n    affiliation: University of Edinburgh\n</code></pre>"},{"location":"configuration/","title":"Plugin Configuration","text":"<p>The <code>mkdocs-authors-plugin</code> offers a few configurable options that you can set in your main MkDocs project's <code>mkdocs.yml</code> file.</p> <p>To configure the plugin, add it under the <code>plugins</code> section and provide the desired options:</p> <pre><code># mkdocs.yml\nplugins:\n  - search\n  - authors_plugin:\n      authors_file: custom_authors.yaml  # Optional: Default is '.authors.yml'\n      output_page: team_members.md      # Optional: Default is 'authors.md'\n</code></pre>"},{"location":"configuration/#options","title":"Options","text":"<ul> <li> <p><code>authors_file</code> (default: <code>.authors.yml</code>)</p> <ul> <li>Type: <code>string</code></li> <li>Description: Specifies the name of the YAML file that contains your authors' data. This file should be located in the root directory of your MkDocs documentation project (the same directory as your main <code>mkdocs.yml</code>).</li> </ul> </li> <li> <p><code>output_page</code> (default: <code>authors.md</code>)</p> <ul> <li>Type: <code>string</code></li> <li>Description: Defines the name of the Markdown file that the plugin will generate. This file will be placed in your <code>docs_dir</code> (e.g., <code>docs/authors.md</code>) and will contain the formatted author information. Ensure this page is referenced in your <code>nav</code> section in <code>mkdocs.yml</code>.</li> </ul> </li> </ul>"},{"location":"authors/","title":"Our Incredible Team!","text":"<p>Meet the team.</p>"},{"location":"authors/#thomas-zwagerman","title":"Thomas Zwagerman","text":"<p>Affiliation: British Antarctic Survey</p> <p>Owner Email: thozwa@bas.ac.uk</p> <p>Connect: GitHub | LinkedIn | Twitter</p>"},{"location":"authors/#thomas-zwagerman_1","title":"Thomas Zwagerman","text":"<p>Affiliation: British Antarctic Survey</p> <p>Owner Email: thozwa@bas.ac.uk</p> <p>Connect: GitHub | LinkedIn | Twitter</p>"}]}